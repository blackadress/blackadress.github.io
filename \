---
layout: post
title: Ejemplo de un servidor eco en nodejs usando Web Sockets (Echo Server Nodejs)
---

Un servidor de eco es una aplicación que permite la conexión entre cliente y servidor
de forma tal que el cliente pueda mandar un mensaje al servidor y el servidor reciba
el mensaje y reenviarlo (hacer eco) al cliente.

El nombre es autodescriptivo, no es un concepto complicado. Si el cliente manda 'Hola',
el servidor recibe 'Hola' y manda 'Hola' al cliente. 
El proyecto es sencillo y podemos usarlo para aprender acerca de Web Sockets, bien empecemos.

Lo primero que necesitamos es crear el proyecto con node:
```bash
$ mkdir echo-server && cd echo-server && npm init -y
```
Ahora instalemos las dependencias, utilizaremos la librería 'ws' por ser bastante transparente
y el siempre confiable 'express' como servidor.

```bash
$ npm i express ws
```

Crearemos el punto de entrada de la aplicación 'index.js' y dentro escribiremos lo siguiente:

```javascript
const express = require('express')
const http = require('http')
const WebSocket = require('ws')

const PORT = 3000

let app = express()
let server = http.Server(app)

const wss = new WebSocket.Server({ server })

wss.on('connection', function connection(ws) {
  ws.on('message', function incoming(message) {
    console.log('received: %s', message);
    ws.send(message)
  });
 
  ws.send('Conexión con el servidor de eco exitosa');
});
```
